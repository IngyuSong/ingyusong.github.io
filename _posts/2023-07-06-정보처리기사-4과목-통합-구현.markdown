---
layout: post
title: 정보처리기사 4과목 통합 구현
date: 2023-07-06T19:15:15
description: You’ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. # Add post description (optional)
img: 20230627/정보처리기사.jpg # Add image post (optional)
categories: [정보처리기사]
tags: [정보처리기사, CS, 자격증] # add tag
comments: true
---
# 정보처리기사 요약정리
## 4과목: 통합 구현

| 단어                 | 내용                                                                                                                                                                                    |
|--------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| 연계 요구사항 분석 시 참고 문서 | `코테응시`<br/>1. 코드 정의서<br/>2. 테이블 정의서<br/>3. 응용 프로그램 구성도(화면 설계서, 인터페이스 정의서 등)<br/>4. 시스템 구성도(소프트웨어 구성도, 하드웨어 구성도, 네트워크 구성도 등)                                                           |
| 개체 정의서             | 개념 데이터 모델링 단계에서 도출된 개체와 관련된 정보를 명세화한 문서                                                                                                                                               |
| 인터페이스(연계) 명세서      | 연계에 필요한 항목을 명세화한 문서<br/>구성요소: `인최크시데`<br/>1. 인터페이스 ID<br/>2. 최대 처리 횟수<br/>3. 데이터 크기(평균/최대)<br/>4. 시스템 정보(송수신 각각): 시스템명, 업무명, 연계방식 등<br/>5. 데이터 정보(송수신 각각): 번호, 필드, 데이터 타입 등           |
| 연계 시스템의 구성         | `송수중`<br/>1. 송신 시스템: 연게할 데이터를 송신<br/>2. 수신 시스템: 수신한 데이터를 변환해 저장하고 활용하는 시스템<br/>3. 중계 시스템: 송신-수신 시스템 사이에서 송수신하고 모니터링하는 시스템                                                             |
| 연계 데이터 표준화         | `공개중`<br/>1. 인터페이스 데이터 공통부: 표준 항목<br/>2. 인터페이스 데이터 개별부: 개별 데이터<br/>3. 인터페이스 데이터 종료부: 전송 데이터의 끝을 알림                                                                                    |
| 연계 매커니즘(직접 연계)     | 직접 연계<br/>- 장점: 구현이 쉽고 개발 기간이 짧음<br/>- 단점: 결합도가 높음                                                                                                                                    |
| 직접 연계 기술           | `링컨애제하`<br/>1. DB Link<br/>2. DB Connection<br/>3. API<br/>4. JDBC<br/>5. 하이퍼링크                                                                                                       |
| DB Connection      | DB Connection Pool을 생성하고 해당 풀 명을 이용하여 연결하는 방식<br/>* 커넥션 풀: DB와 연결된 커넥션을 미리 만들어 풀 속에 저장하고, 필요할 때마다 쓰고 반환하는 기법                                                                          |
| API                | 데이터를 주고 받을 때 어떤 방식으로 요청하고 제공받을 수 있는지, 규칙을 정해놓은 인터페이스                                                                                                                                  |
| JDBC               | JDBC 드라이버를 이용해 송신 시스템의 DB와 연결하는 방식<br/>* JDBC: 자바에서 데이터베이스에 접속할 수 있게 해주는 API<br/>* JDBC 드라이버의 구성: Java Application - JDBC API - JDBC Driver Manager - JDBC Driver                     |
| 하이퍼링크              | 현재 페이지에서 다른 부분 또는 다른 페이지로 이동하게 해주는 속성                                                                                                                                                 |
| 연계 매커니즘(간접 연계)     | 간접 연계<br/>- 장점: 서로 상이한 네트워크, 프로토콜 연계 가능<br/>- 단점: 성능 저하, 개발 비용이 높음                                                                                                                    |
| 간접 연계 기술           | `이에아 이스비 소켓`<br/>1. ESI<br/>2. ESB<br/>3. Socket                                                                                                                                      |
| EAI                | 기업에서 운영되는 서로 다른 플랫폼 및 애플리케이션 간 연계를 돕는 솔루션                                                                                                                                             |
| EAI 구성요소           | 1. EAI 플랫폼<br/>2. 어댑터: EAI의 핵심장치. 애플리케이션을 연결하는 데이터 입출력 도구<br/>3. 브로커: 데이터 전송 시 포맷과 코드를 변환해줌<br/>4. 메시지 큐: 비동기 메시지를 사용하는 프로그램 사이에서 송수신해주는 기술<br/>5. 비즈니스 워크플로우: 미리 정의된 워크플로우에 따라 업무 처리 |
| EAI의 유형            | `포허메하`<br/>1. Point-to-point<br/>2. Hub & Spoke<br/>3. Message Bus<br/>4. Hybrid                                                                                                      |
| Point-to-point     | 가장 기초적인 1:1 단순 통합방법                                                                                                                                                                   |
| Hub & Spoke        | 허브 시스템을 통한 중앙 집중 방식                                                                                                                                                                   |
| Message Bus        | 애플리케이션 사이에 미들웨어(버스)를 두어 연계                                                                                                                                                            |
| Hybrid             | 그룹 내 = Hub & Spoke<br/>그룹 간 = Message Bus                                                                                                                                             |
| ESB                | 기업에서 운영되는 서로 다른 플랫폼 및 애플리케이션을 하나의 시스템으로 관리할 수 있게 하는 아키텍처로, 미들웨어(버스)를 중심으로 애플리케이션 통합을 "느신한 결합"방식으로 지원                                                                                  |
| EAI vs ESB         | EAI<br/>- 기업 내부 이기종 통합<br/>- 토폴로지: `포허메하`<br/>- 핵심 기술: 어탭터, 브로커, 메시지 큐<br/><br/>ESB<br/>- 기업 간 서비스 통합<br/>- 토폴로지: 버스 방식의 분산형<br/>- 핵심 기술: 웹 서비스, 지능형 라우터, 포맷 변환, 개방형 표준               |
| Socket             | 프로세스 간 통신의 접속점(IP주소 + 포트넘버)<br/>클라이언트 요청을 서버와 연결해줌                                                                                                                                    |
| 연계 매커니즘 수행 절차      | 1. 연계 데이터 추출 및 생성<br/>2. 코드 매핑(데이터 변환)<br/>3. 연계 테이블 또는 연게 파일 생성<br/>4. 로그 기록<br/>5. 연계 서버 또는 송수신 어댑터<br/>6. 전송<br/>7. 수신된 데이터 DB에 반영                                                 |
| 웹 서비스 방식           | `솦 웹서디랭 우디`<br/>1. SOAP<br/>2. WSDL<br/>3. UDDI                                                                                                                                       |
| SOAP               | HTTP, HTTPS 등을 사용해 XML 기반의 메시지를 교환하는 프로토콜                                                                                                                                             |
| WSDL               | Web Service Description Language<br/>웹 서비스명, 제공위치 등 웹 서비스의 정보가 기술된 XML 형식의 언어                                                                                                         |
| UDDI               | WSDL의 등록•검색을 위한 저장소(공개적으로 접근 가능한 레지스트리)                                                                                                                                               |